{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT, FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAIL, FETCH_USERPROFILE_REQUEST, FETCH_USERPROFILE_SUCCESS, FETCH_USERPROFILE_FAIL } from \"./actionTypes\";\nexport const loginUser = _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const config = {\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"token 5a30fa424434116f6686d0d56ec955da87df759d\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api-login\", {\n        username,\n        password\n      }, config);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      console.log(data); // sessionStorage.setItem(\"userAuthData\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchUsers = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: FETCH_USERS_REQUEST,\n        loading: true\n      });\n      const {\n        userInfo\n      } = getState().userLogin;\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `token ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/all-students\", config);\n      dispatch({\n        type: FETCH_USERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_USERS_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchUserprofile = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: FETCH_USERPROFILE_REQUEST,\n        loading: true\n      });\n      const {\n        userInfo\n      } = getState().userLogin;\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `token ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/user-profile\", config);\n      dispatch({\n        type: FETCH_USERPROFILE_SUCCESS,\n        payload: data\n      });\n      sessionStorage.setItem(\"isstaff\", JSON.stringify(data.is_staff));\n    } catch (error) {\n      dispatch({\n        type: FETCH_USERPROFILE_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    sessionStorage.clear();\n\n    try {\n      dispatch({\n        type: USER_LOGOUT\n      });\n    } catch (error) {}\n  };\n};","map":{"version":3,"sources":["/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/users/useractions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_LOGOUT","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","FETCH_USERPROFILE_REQUEST","FETCH_USERPROFILE_SUCCESS","FETCH_USERPROFILE_FAIL","loginUser","username","password","dispatch","type","config","credentials","headers","authorization","data","post","payload","console","log","error","response","message","fetchUsers","getState","loading","userInfo","userLogin","token","get","fetchUserprofile","sessionStorage","setItem","JSON","stringify","is_staff","logoutUser","clear"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    FETCH_USERS_REQUEST,\n    FETCH_USERS_SUCCESS,\n    FETCH_USERS_FAIL,\n    FETCH_USERPROFILE_REQUEST,\n    FETCH_USERPROFILE_SUCCESS,\n    FETCH_USERPROFILE_FAIL,\n} from \"./actionTypes\";\n\n\nexport const loginUser = ({ username, password }) => {\n    return async (dispatch) => {\n        try {\n            dispatch({\n                type: USER_LOGIN_REQUEST,\n            });\n\n            const config = {\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    authorization: \"token 5a30fa424434116f6686d0d56ec955da87df759d\",\n                },\n            };\n            const { data } = await axios.post(\n                \"/api-login\",\n                { username, password },\n                config\n            );\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            });\n            console.log(data)\n            // sessionStorage.setItem(\"userAuthData\", JSON.stringify(data));\n        } catch (error) {\n            dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: error.response.data.message,\n            });\n        }\n    };\n};\n\nexport const fetchUsers = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: FETCH_USERS_REQUEST,\n                loading: true,\n            });\n            const { userInfo } = getState().userLogin;\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    authorization: `token ${userInfo.token}`,\n                },\n            };\n            const { data } = await axios.get(\"/all-students\", config);\n            dispatch({\n                type: FETCH_USERS_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: FETCH_USERS_FAIL,\n                error: error.response && error.response.data.message,\n            });\n        }\n    };\n};\n\nexport const fetchUserprofile = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: FETCH_USERPROFILE_REQUEST,\n                loading: true,\n            });\n            const { userInfo } = getState().userLogin;\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    authorization: `token ${userInfo.token}`,\n                },\n            };\n\n            const { data } = await axios.get(\"/user-profile\", config);\n            dispatch({\n                type: FETCH_USERPROFILE_SUCCESS,\n                payload: data,\n            });\n            sessionStorage.setItem(\"isstaff\", JSON.stringify(data.is_staff));\n        } catch (error) {\n            dispatch({\n                type: FETCH_USERPROFILE_FAIL,\n                error: error.response && error.response.data.message,\n            });\n        }\n    };\n}\n\nexport const logoutUser = () => {\n    return async (dispatch) => {\n        sessionStorage.clear();\n        try {\n            dispatch({\n                type: USER_LOGOUT,\n            });\n        } catch (error) { }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}