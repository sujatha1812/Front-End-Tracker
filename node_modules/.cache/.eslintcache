[{"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/index.js":"1","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/App.js":"2","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/store/store.js":"3","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/navBar.js":"4","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/users.js":"5","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/login.js":"6","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/userprofile.js":"7","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/get-student-detail.js":"8","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/services/privateRoute.js":"9","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/userReducer/loginreducer.js":"10","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/userReducer/userprofilereducer.js":"11","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/attendanceReducer/getstudentdetail.js":"12","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/users/useractions.js":"13","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/attendance/attendanceaction.js":"14","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/users/actionTypes.js":"15","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/attendance/actionTypes.js":"16","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/attendanceReducer/getdata.js":"17","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/get-student-data.js":"18","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/home.js":"19","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/createattendance.js":"20","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/checkout.js":"21","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/sample.js":"22","/home/asplap1462/Downloads/project-31/Frontend/src/index.js":"23","/home/asplap1462/Downloads/project-31/Frontend/src/App.js":"24","/home/asplap1462/Downloads/project-31/Frontend/src/redux/store/store.js":"25","/home/asplap1462/Downloads/project-31/Frontend/src/components/userprofile.js":"26","/home/asplap1462/Downloads/project-31/Frontend/src/components/get-student-detail.js":"27","/home/asplap1462/Downloads/project-31/Frontend/src/components/login.js":"28","/home/asplap1462/Downloads/project-31/Frontend/src/components/users.js":"29","/home/asplap1462/Downloads/project-31/Frontend/src/components/get-student-data.js":"30","/home/asplap1462/Downloads/project-31/Frontend/src/components/home.js":"31","/home/asplap1462/Downloads/project-31/Frontend/src/components/createattendance.js":"32","/home/asplap1462/Downloads/project-31/Frontend/src/components/checkout.js":"33","/home/asplap1462/Downloads/project-31/Frontend/src/components/navBar.js":"34","/home/asplap1462/Downloads/project-31/Frontend/src/services/privateRoute.js":"35","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/userlistreducer.js":"36","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/userprofilereducer.js":"37","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/loginreducer.js":"38","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/generateCode.js":"39","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/getstudentdetail.js":"40","/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/getdata.js":"41","/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/attendance/attendanceaction.js":"42","/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/users/useractions.js":"43","/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/users/actionTypes.js":"44","/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/attendance/actionTypes.js":"45","/home/asplap1462/Downloads/project-31/Frontend/src/components/faq.js":"46","/home/asplap1462/Downloads/project-31/Frontend/src/components/scanner.js":"47","/home/asplap1462/Downloads/project-31/Frontend/src/components/qrscanner.js":"48","/home/asplap1462/Downloads/project-31/Frontend/src/services/config.js":"49"},{"size":560,"mtime":1649224435965,"results":"50","hashOfConfig":"51"},{"size":2567,"mtime":1651568539480,"results":"52","hashOfConfig":"51"},{"size":1250,"mtime":1649851726015,"results":"53","hashOfConfig":"51"},{"size":8733,"mtime":1649862583048,"results":"54","hashOfConfig":"51"},{"size":5331,"mtime":1649856824463,"results":"55","hashOfConfig":"51"},{"size":6059,"mtime":1649226034273,"results":"56","hashOfConfig":"51"},{"size":2576,"mtime":1649856799595,"results":"57","hashOfConfig":"51"},{"size":4492,"mtime":1650995998248,"results":"58","hashOfConfig":"51"},{"size":255,"mtime":1649236943268,"results":"59","hashOfConfig":"51"},{"size":756,"mtime":1649224435965,"results":"60","hashOfConfig":"51"},{"size":650,"mtime":1649224435965,"results":"61","hashOfConfig":"51"},{"size":644,"mtime":1649224435965,"results":"62","hashOfConfig":"51"},{"size":3455,"mtime":1649852133290,"results":"63","hashOfConfig":"51"},{"size":3872,"mtime":1650371223036,"results":"64","hashOfConfig":"51"},{"size":578,"mtime":1649224435965,"results":"65","hashOfConfig":"51"},{"size":706,"mtime":1649851605845,"results":"66","hashOfConfig":"51"},{"size":628,"mtime":1649851698086,"results":"67","hashOfConfig":"51"},{"size":4900,"mtime":1650994344287,"results":"68","hashOfConfig":"51"},{"size":692,"mtime":1649854332157,"results":"69","hashOfConfig":"51"},{"size":1084,"mtime":1650996436268,"results":"70","hashOfConfig":"51"},{"size":1483,"mtime":1650373375647,"results":"71","hashOfConfig":"51"},{"size":6467,"mtime":1651061402345,"results":"72","hashOfConfig":"51"},{"size":560,"mtime":1649224435000,"results":"73","hashOfConfig":"74"},{"size":3087,"mtime":1652443894582,"results":"75","hashOfConfig":"74"},{"size":1250,"mtime":1649851726000,"results":"76","hashOfConfig":"74"},{"size":2576,"mtime":1649856799000,"results":"77","hashOfConfig":"74"},{"size":4492,"mtime":1650995998000,"results":"78","hashOfConfig":"74"},{"size":6059,"mtime":1649226034000,"results":"79","hashOfConfig":"74"},{"size":5331,"mtime":1649856824000,"results":"80","hashOfConfig":"74"},{"size":4900,"mtime":1650994344000,"results":"81","hashOfConfig":"74"},{"size":692,"mtime":1649854332000,"results":"82","hashOfConfig":"74"},{"size":1018,"mtime":1652496393280,"results":"83","hashOfConfig":"74"},{"size":1483,"mtime":1650373375000,"results":"84","hashOfConfig":"74"},{"size":10271,"mtime":1652444258553,"results":"85","hashOfConfig":"74"},{"size":255,"mtime":1649236943000,"results":"86","hashOfConfig":"74"},{"size":608,"mtime":1649224435000,"results":"87","hashOfConfig":"74"},{"size":650,"mtime":1649224435000,"results":"88","hashOfConfig":"74"},{"size":756,"mtime":1649224435000,"results":"89","hashOfConfig":"74"},{"size":680,"mtime":1649224435000,"results":"90","hashOfConfig":"74"},{"size":644,"mtime":1649224435000,"results":"91","hashOfConfig":"74"},{"size":628,"mtime":1649851698000,"results":"92","hashOfConfig":"74"},{"size":3872,"mtime":1650371223000,"results":"93","hashOfConfig":"74"},{"size":3455,"mtime":1649852133000,"results":"94","hashOfConfig":"74"},{"size":578,"mtime":1649224435000,"results":"95","hashOfConfig":"74"},{"size":706,"mtime":1649851605000,"results":"96","hashOfConfig":"74"},{"size":2324,"mtime":1652443368745,"results":"97","hashOfConfig":"74"},{"size":152,"mtime":1652443852738,"results":"98","hashOfConfig":"74"},{"size":7340,"mtime":1652627021608,"results":"99","hashOfConfig":"74"},{"size":60,"mtime":1652501049410,"results":"100","hashOfConfig":"74"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1a00uo9",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"n9dk1e",{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"177"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"177"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"177"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"177"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/index.js",[],[],["258","259"],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/App.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/store/store.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/navBar.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/users.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/login.js",["260"],[],"import react, { useState, useEffect } from 'react'\nimport Avatar from '@mui/material/Avatar'\nimport Button from '@mui/material/Button'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport Typography from '@mui/material/Typography'\nimport TextField from '@mui/material/TextField'\nimport Container from '@mui/material/Container'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport { useForm } from \"react-hook-form\";\nimport Modal from '@mui/material/Modal';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/users/useractions\";\n\n\nconst theme = createTheme()\n\nconst Login = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [username, setusername] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const handleClose = () => setOpen(false);\n\n    const history = useNavigate();\n    const dispatch = useDispatch();\n\n    const userLoginDetails = useSelector((state) => state.userLogin);\n    const { userInfo } = userLoginDetails;\n\n    useEffect(() => {\n        if (userInfo) {\n            history(\"/user-profile\");\n        }\n    }, [dispatch, userInfo, history]);\n\n\n    function onSubmit() {\n        setOpen(true)\n        dispatch(loginUser({ username, password }));\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 25,\n                        marginBottom: 15,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        p: 2, border: '1px dashed grey'\n                    }}\n                >\n                    <Avatar sx={{\n                        m: 1,\n                        bgcolor: 'secondary.main'\n                    }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h2\" variant=\"h4\">\n                        LogIn\n                    </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                        <TextField\n                            margin='normal'\n                            fullWidth\n                            required\n                            id='name'\n                            type=\"name\"\n                            {...register(\"name\", {\n                                required: true, maxLength: 10\n                            })}\n                            value={username}\n                            onChange={(e) => setusername(e.target.value)}\n                            label='User Name'\n                            name='name'\n                            autoComplete='name'\n                            autoFocus\n\n\n                        />\n\n                        {errors.name && errors.name.type === \"maxLength\" && (\n                            <span role=\"alert\" style={{ color: \"red\", fontStyle: \"italic\" }}>Minimum of 10 characters</span>\n                        )}\n\n                        <TextField\n                            margin='normal'\n                            fullWidth\n                            required\n                            type=\"password\"\n                            {...register(\"password\", {\n                                required: true,\n                                minLength: 8\n                            })}\n                            id='password'\n                            label='Password'\n                            name='password'\n                            value={password}\n                            onChange={(e) => setpassword(e.target.value)}\n                            autoComplete='current-password'\n                            autoFocus\n\n                        />\n                        {errors.name && errors.name.type === \"minLength\" && (\n                            <span role=\"alert\" style={{ color: \"red\", fontStyle: \"italic\" }}>Minimum of 20 characters</span>\n                        )}\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            varinat=\"contained\"\n                            sx={{ mt: 3 }}\n                        >\n                            Sign In\n                        </Button>\n                        <Modal\n                            open={open}\n                            onClose={handleClose}\n                            aria-labelledby=\"modal-modal-title\"\n                            aria-describedby=\"modal-modal-description\"\n                        >\n                            <Box sx={{\n                                position: 'absolute',\n                                top: '50%',\n                                left: '50%',\n                                transform: 'translate(-50%, -50%)',\n                                width: 400,\n                                bgcolor: 'background.paper',\n                                border: '2px solid #000',\n                                boxShadow: 24,\n                                p: 4,\n                            }}>\n                                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                                    Logged In\n                                </Typography>\n                                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                                    You Have Logged In!!\n                                </Typography>\n\n                            </Box>\n                        </Modal>\n                    </Box>\n\n                </Box>\n\n            </Container >\n\n        </ThemeProvider >\n    )\n}\n\nexport default Login","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/userprofile.js",["261","262"],[],"import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport { fetchUserprofile } from \"../redux/actions/users/useractions\";\n\nconst UserProfiles = () => {\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchUserprofile());\n    }, [dispatch]);\n\n    const userProfile = useSelector((state) => state.userProfile);\n    const { users } = userProfile;\n    const newarray = useMemo(\n        () => {\n            let a = new Array()\n            users && a.push(users)\n            return a\n        }\n\n    )\n    return (\n        <div className=\"container-fluid\">\n            <Card sx={{\n                maxWidth: 600,\n                maxHeight: 700,\n                marginLeft: 80,\n                marginTop: 20,\n                color: 'red',\n\n            }}>\n                <Avatar sx={{\n                    marginLeft: 35\n                }} />\n                <CardActionArea>\n\n                    {newarray &&\n                        newarray.map((user) => (\n                            <CardContent key={user.id}>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <small className=\"small\">Name: </small>\n                                    {user.username}\n\n                                </Typography >\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <small className=\"small\">Email: </small>\n                                    {user.email}\n\n                                </Typography>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <small className=\"small\">Date Of Joined: </small>\n                                    {user.date_joined}\n\n                                </Typography>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    <small className=\"small\">Last Login: </small>\n                                    {user.last_login}\n\n                                </Typography>\n                            </CardContent>\n                        ))}\n\n                </CardActionArea>\n            </Card>\n\n\n        </div>\n\n    );\n};\n\nexport default UserProfiles;\n","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/get-student-detail.js",["263","264"],[],"import React, { useEffect } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getstudentDetail } from \"../redux/actions/attendance/attendanceaction\";\nimport { Button } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\n\n\nconst GetStudentDetail = () => {\n\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\n        [`&.${tableCellClasses.head}`]: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        [`&.${tableCellClasses.body}`]: {\n            fontSize: 14,\n        },\n    }));\n\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n\n        '&:last-child td, &:last-child th': {\n            border: 0,\n        },\n    }));\n    const dispatch = useDispatch();\n\n    const getProfile = useSelector((state) => state.getProfile);\n    const { users } = getProfile;\n    const { id } = useParams()\n    useEffect(() => {\n        dispatch(getstudentDetail(id));\n    }, [dispatch]);\n\n    const renderTable = () => {\n        if (users) {\n            return (\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"left\">Date</StyledTableCell>\n                                <StyledTableCell align=\"left\">Qr Code</StyledTableCell>\n                                <StyledTableCell align=\"left\">Place</StyledTableCell>\n                                <StyledTableCell align=\"left\">CheckInTime</StyledTableCell>\n                                <StyledTableCell align=\"left\">CheckOutTime</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users\n                                .map((user) => (\n                                    <StyledTableRow key={user.id}>\n                                        <StyledTableCell>{user.date}</StyledTableCell>\n                                        <StyledTableCell>{user.qrCodeId}</StyledTableCell>\n                                        <StyledTableCell>{user.place}</StyledTableCell>\n                                        <StyledTableCell>{user.checkInTime}</StyledTableCell>\n                                        {/* <StyledTableCell>{ctime}</StyledTableCell> */}\n                                        {/* <StyledTableCell>\n                                            <Button\n                                                onClick={handelTime}\n                                                style={{ backgroundColor: \"darkgray\" }}\n                                            >\n                                                CheckOut\n                                            </Button>\n                                        </StyledTableCell> */}\n\n                                    </StyledTableRow>\n                                ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            );\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col mt-5\">\n                    <Typography variant=\"h3\" component=\"h2\"\n                        sx={{\n                            marginTop: 10\n                        }}\n                    >\n                        Know Your Data\n                    </Typography>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">{renderTable()}</div>\n            </div>\n\n            <a href=\"/all-students\"  >\n                <ArrowLeftIcon style={{ fontSize: 70 }} />\n            </a>\n        </div>\n    );\n};\n\nexport default GetStudentDetail;\n\n","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/services/privateRoute.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/userReducer/loginreducer.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/userReducer/userprofilereducer.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/attendanceReducer/getstudentdetail.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/users/useractions.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/attendance/attendanceaction.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/users/actionTypes.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/actions/attendance/actionTypes.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/redux/reducers/attendanceReducer/getdata.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/get-student-data.js",["265","266","267","268"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getstudentData } from \"../redux/actions/attendance/attendanceaction\";\nimport { Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GetStudentData = () => {\n\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\n        [`&.${tableCellClasses.head}`]: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        [`&.${tableCellClasses.body}`]: {\n            fontSize: 14,\n        },\n    }));\n\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n\n        '&:last-child td, &:last-child th': {\n            border: 0,\n        },\n    }));\n    const dispatch = useDispatch();\n    const history = useNavigate();\n\n\n    const time = null;\n\n\n    const getData = useSelector((state) => state.getData);\n    const { users } = getData;\n    useEffect(() => {\n        dispatch(getstudentData());\n    }, [dispatch]);\n\n    const customcheckout = useMemo(() => {\n        let checkarray = new Array()\n        let i = 0\n        while (i < users?.length) {\n            checkarray.push(null)\n            i++\n        }\n        return checkarray\n    }, [])\n\n    const [ctime, setDate] = useState(customcheckout);\n\n    const handelTime = (i) => {\n        let time = new Date().toLocaleTimeString();\n        let newarray = [...ctime]\n        newarray[i] = time\n        setDate(newarray);\n    }\n    const renderTable = () => {\n        if (users) {\n            return (\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"left\">Date</StyledTableCell>\n                                <StyledTableCell align=\"left\">Qr Code</StyledTableCell>\n                                <StyledTableCell align=\"left\">Place</StyledTableCell>\n                                <StyledTableCell align=\"left\">CheckInTime</StyledTableCell>\n                                <StyledTableCell align=\"left\">CheckOutTime</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users\n                                .map((user, i) => (\n                                    <StyledTableRow key={user.id}>\n                                        <StyledTableCell>{user.date}</StyledTableCell>\n                                        <StyledTableCell>{user.qrCodeId}</StyledTableCell>\n                                        <StyledTableCell>{user.place}</StyledTableCell>\n                                        <StyledTableCell>{user.checkInTime}</StyledTableCell>\n                                        <StyledTableCell>{ctime[i]}</StyledTableCell>\n                                        <StyledTableCell>\n                                            <Button\n                                                onClick={() => handelTime(i)}\n                                                style={{ backgroundColor: \"darkgray\" }}\n                                            >\n                                                CheckOut\n                                            </Button>\n                                        </StyledTableCell>\n\n                                    </StyledTableRow>\n                                ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            );\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col mt-5\">\n                    <Typography variant=\"h3\" component=\"h2\"\n                        sx={{\n                            marginTop: 10\n                        }}\n                    >\n                        Know Your Data\n                    </Typography>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">{renderTable()}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default GetStudentData;\n\n","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/home.js",[],[],"/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/createattendance.js",["269","270","271"],[],"import react, { useState, useEffect } from 'react'\nimport QRCode from \"qrcode.react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GenerateCode } from \"../redux/actions/attendance/attendanceaction\";\n\n\nconst Createattendance = () => {\n    const [qrValue, setQrValue] = useState(\"college\");\n    useEffect(() => {\n        // const interval = setInterval(setQrValue, 10000)\n        const interval = setInterval(function () {\n            window.location.reload();\n        }, 10000);\n\n        return () => clearInterval(interval)\n    }, []);\n\n    const dispatch = useDispatch();\n    const generateCodeDetails = useSelector((state) => state.generateCode);\n    const { code } = generateCodeDetails;\n    console.log(code)\n    useEffect(() => {\n        dispatch(GenerateCode());\n    }, [dispatch]);\n    return (\n        <div>\n            <QRCode\n                id=\"qr-gen\"\n                value={code}\n                size={490}\n                level={\"H\"}\n                includeMargin={true}\n            />\n\n\n        </div>\n    )\n}\n\nexport default Createattendance\n\n\n\n\n\n","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/checkout.js",["272"],[],"import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCheckout } from '../redux/actions/attendance/attendanceaction';\n\nconst Checkout = () => {\n    const history = useNavigate();\n    const timer = JSON.parse(sessionStorage.getItem(\"time\"));\n    console.log(\"updateproduct\", timer);\n\n    const times = null;\n    const [checkoutime, setCheckOutTime] = useState(times);\n    const dispatch = useDispatch();\n\n    const handleTime = () => {\n        let times = new Date().toLocaleTimeString();\n        setCheckOutTime(times);\n        dispatch(updateCheckout());\n        history(\"/get-student-data\");\n    }\n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">CheckOutTime</label>\n                        <input\n                            value={checkoutime}\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                        />\n                    </div>\n\n\n                    <button type=\"submit\" onClick={() => handleTime}>\n                        Update your time\n                    </button>\n                </fieldset>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Checkout\n","/home/asplap1462/Desktop/Documents/Tasks/task1/project-31/Frontend/src/components/sample.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/index.js",[],[],["273","274"],"/home/asplap1462/Downloads/project-31/Frontend/src/App.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/store/store.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/userprofile.js",["275","276"],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/get-student-detail.js",["277","278"],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/login.js",["279"],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/users.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/get-student-data.js",["280","281","282","283"],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/home.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/createattendance.js",["284","285","286"],[],"import react, { useState, useEffect } from 'react'\nimport QRCode from \"qrcode.react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GenerateCode } from \"../redux/actions/attendance/attendanceaction\";\n\n\nconst Createattendance = () => {\n    const [qrValue, setQrValue] = useState(\"\");\n    useEffect(() => {\n        const interval = setInterval(function () {\n            window.location.reload();\n        }, 10000);\n\n        return () => clearInterval(interval)\n    }, []);\n\n    const dispatch = useDispatch();\n    const generateCodeDetails = useSelector((state) => state.generateCode);\n    const { code } = generateCodeDetails;\n    console.log(code)\n    useEffect(() => {\n        dispatch(GenerateCode());\n    }, [dispatch]);\n    return (\n        <div>\n            <QRCode\n                id=\"qr-gen\"\n                value={code}\n                size={490}\n                level={\"H\"}\n                includeMargin={true}\n            />\n\n\n        </div>\n    )\n}\n\nexport default Createattendance\n\n\n\n\n\n","/home/asplap1462/Downloads/project-31/Frontend/src/components/checkout.js",["287"],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/navBar.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/services/privateRoute.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/userlistreducer.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/userprofilereducer.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/userReducer/loginreducer.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/generateCode.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/getstudentdetail.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/reducers/attendanceReducer/getdata.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/attendance/attendanceaction.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/users/useractions.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/users/actionTypes.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/redux/actions/attendance/actionTypes.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/faq.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/scanner.js",[],[],"/home/asplap1462/Downloads/project-31/Frontend/src/components/qrscanner.js",["288","289"],[],"import { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport axios from \"axios\";\nimport { backendUrl } from \"../services/config\";\nimport emailjs from '@emailjs/browser';\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst Test = () => {\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n    console.log(\"info\", userInfo);\n\n    const [code, setCode] = useState(null);\n    const [showDialog, setDiaglog] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [precScan, setPrecScan] = useState(\"\");\n    const [selected, setSelected] = useState(\"environment\");\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [userEmail] = useState(userInfo.profile.email);\n    const numbers = [\"maths\", \"science\", 'canteen'];\n    const doubled = numbers.map((number) => number);\n    console.log(doubled);\n\n\n    const formSubmitHandler = (e) => {\n        e.preventDefault()\n        // var templateParams = {\n        //     to_name: 'xyz',\n        //     from_name: 'abc',\n        //     message_html: 'Please Find out the attached file'\n        // };\n        // emailjs.send(\"service_mas4wmn\", \"template_ssqkzc1\", templateParams)\n        // emailjs.send(\"service_asw0i9g\", \"template_ssqkzc1\");\n        emailjs\n            .sendForm(\n                \"service_asw0i9g\",\n                \"template_ssqkzc1\",\n                e.target,\n                \"eUeVCvjuHSKKMWfL-\"\n            )\n            .then(\n                (result) => {\n                    console.log(\"res\", result.text);\n                },\n                (error) => {\n                    console.log(\"result\", error);\n                }\n            );\n    }\n\n    async function fetchData({ qr = \"\" }) {\n        try {\n            setProcessing(true);\n            const result = await axios.put(\n                `${backendUrl}`\n            );\n            console.log(\"scanned code\", qr);\n            console.log(\"r\", result)\n\n            console.log('results', result)\n            const { message, payement } = result.data;\n            const current = new Date();\n            // console.log(payement);\n            if (!message) {\n                setCode({\n                    place: doubled,\n                    date: current.getDate(),\n                    checkInTime: current.getHours() + ':' + current.getMinutes() + ':' + current.getSeconds(),\n                    checkOutTime: \"null\",\n                    expired: false,\n                    checkInStatus: false,\n                    checkOutStatus: false,\n                });\n                // setPrecScan(null);\n                setDiaglog(true);\n            } else {\n                setCode(null);\n                setPrecScan(null);\n                setErrorMessage(message);\n                setDiaglog(true);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleScan = async (scanData) => {\n        console.log(`loaded data data`, scanData);\n        if (scanData && scanData !== \"\" && !showDialog && !processing) {\n            console.log(`loaded >>>`, scanData);\n            // setPrecScan(scanData);\n            await fetchData({ qr: scanData });\n        }\n    };\n    const handleError = (err) => {\n        console.error(err);\n    };\n    return (\n        <div className=\"App\">\n            <h1>Scan Your code to mark yours</h1>\n            <h2>\n                Last Scan:{precScan}\n                {selected}\n            </h2>\n            <select onChange={(e) => setSelected(e.target.value)}>\n                <option value={\"environment\"}>Back Camera</option>\n                <option value={\"user\"}>Front Camera</option>\n            </select>\n            {showDialog && (\n                <div className=\"dialog\">\n                    <div className=\"dialog-content\">\n                        <div className=\"close\">\n                            <button\n                                onClick={() => {\n                                    setCode(null);\n                                    setErrorMessage(null);\n                                    setDiaglog(false);\n                                    setProcessing(false);\n                                }}\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M6 18L18 6M6 6l12 12\"\n                                    />\n                                </svg>\n                            </button>\n                        </div>\n                        {errorMessage && (\n                            <div className=\"errorMessage\">\n                                <h2>{errorMessage}</h2>\n                            </div>\n                        )}\n                        {code && (\n                            <div className=\"description\">\n                                <h4 className=\"title\">Scan Result</h4>\n                                <div className=\"detail detail-first-child\">\n                                    <h6 className=\"detail-header\">Place :</h6>\n                                    <h6 className=\"detail-content green\">{code.place}</h6>\n                                </div>\n                                <div className=\"detail\">\n                                    <h6 className=\"detail-header\">Date :</h6>\n                                    <h6 className=\"detail-content\">{code.date}</h6>\n                                </div>\n                                <div className=\"detail\">\n                                    <h6 className=\"detail-header\">checkInTime :</h6>\n                                    <h6 className=\"detail-content\">{code.checkInTime}</h6>\n                                </div>\n\n\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n            {/* {code && <h2>{code.text}</h2>} */}\n            {!showDialog && !processing && (\n                <QrReader\n                    facingMode={selected}\n                    delay={500}\n                    onError={handleError}\n                    onScan={handleScan}\n                // chooseDeviceId={()=>selected}\n                // style={{ width: \"50px\", heigth: \"50px\" }}\n                />\n            )}\n            <form onSubmit={formSubmitHandler}>\n                <div className=\"field\">\n                    <label>Email Id</label>\n                    <input\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={userEmail}\n                        disabled\n                    />\n                </div>\n                <div>\n                    <button className=\"submit\">Submit</button>\n                </div >\n            </form>\n        </div>\n    );\n};\n\nexport default Test;\n","/home/asplap1462/Downloads/project-31/Frontend/src/services/config.js",[],[],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"298","severity":1,"message":"299","line":19,"column":22,"nodeType":"296","endLine":19,"endColumn":29},{"ruleId":"300","severity":1,"message":"301","line":21,"column":21,"nodeType":"302","messageId":"303","endLine":21,"endColumn":32},{"ruleId":"294","severity":1,"message":"304","line":13,"column":10,"nodeType":"296","messageId":"297","endLine":13,"endColumn":16},{"ruleId":"298","severity":1,"message":"305","line":46,"column":8,"nodeType":"306","endLine":46,"endColumn":18,"suggestions":"307"},{"ruleId":"294","severity":1,"message":"308","line":38,"column":11,"nodeType":"296","messageId":"297","endLine":38,"endColumn":18},{"ruleId":"294","severity":1,"message":"309","line":41,"column":11,"nodeType":"296","messageId":"297","endLine":41,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":51,"column":26,"nodeType":"302","messageId":"303","endLine":51,"endColumn":37},{"ruleId":"298","severity":1,"message":"310","line":58,"column":8,"nodeType":"306","endLine":58,"endColumn":10,"suggestions":"311"},{"ruleId":"294","severity":1,"message":"295","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"312","line":9,"column":12,"nodeType":"296","messageId":"297","endLine":9,"endColumn":19},{"ruleId":"294","severity":1,"message":"313","line":9,"column":21,"nodeType":"296","messageId":"297","endLine":9,"endColumn":31},{"ruleId":"294","severity":1,"message":"314","line":3,"column":23,"nodeType":"296","messageId":"297","endLine":3,"endColumn":34},{"ruleId":"290","replacedBy":"315"},{"ruleId":"292","replacedBy":"316"},{"ruleId":"298","severity":1,"message":"299","line":19,"column":22,"nodeType":"296","endLine":19,"endColumn":29},{"ruleId":"300","severity":1,"message":"301","line":21,"column":21,"nodeType":"302","messageId":"303","endLine":21,"endColumn":32},{"ruleId":"294","severity":1,"message":"304","line":13,"column":10,"nodeType":"296","messageId":"297","endLine":13,"endColumn":16},{"ruleId":"298","severity":1,"message":"305","line":46,"column":8,"nodeType":"306","endLine":46,"endColumn":18,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"295","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"308","line":38,"column":11,"nodeType":"296","messageId":"297","endLine":38,"endColumn":18},{"ruleId":"294","severity":1,"message":"309","line":41,"column":11,"nodeType":"296","messageId":"297","endLine":41,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":51,"column":26,"nodeType":"302","messageId":"303","endLine":51,"endColumn":37},{"ruleId":"298","severity":1,"message":"310","line":58,"column":8,"nodeType":"306","endLine":58,"endColumn":10,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"295","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"312","line":9,"column":12,"nodeType":"296","messageId":"297","endLine":9,"endColumn":19},{"ruleId":"294","severity":1,"message":"313","line":9,"column":21,"nodeType":"296","messageId":"297","endLine":9,"endColumn":31},{"ruleId":"294","severity":1,"message":"314","line":3,"column":23,"nodeType":"296","messageId":"297","endLine":3,"endColumn":34},{"ruleId":"294","severity":1,"message":"319","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":21},{"ruleId":"294","severity":1,"message":"320","line":64,"column":30,"nodeType":"296","messageId":"297","endLine":64,"endColumn":38},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["323"],"'history' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'users?.length'. Either include it or remove the dependency array.",["324"],"'qrValue' is assigned a value but never used.","'setQrValue' is assigned a value but never used.","'useSelector' is defined but never used.",["321"],["322"],["325"],["326"],"'useDispatch' is defined but never used.","'payement' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"327","fix":"331"},{"desc":"329","fix":"332"},"Update the dependencies array to be: [dispatch, id]",{"range":"333","text":"334"},"Update the dependencies array to be: [users?.length]",{"range":"335","text":"336"},{"range":"337","text":"334"},{"range":"338","text":"336"},[1612,1622],"[dispatch, id]",[1827,1829],"[users?.length]",[1612,1622],[1827,1829]]